import numpy as np
from hdcPY import *
from encoder import *

LENGTH = 10000

def encodeTraining():
    # encoding all languages
    english_training = encodeSample('python/training/eng.txt', LENGTH)
    np.savetxt('python/encoded/vec_en.txt', english_training, fmt='%f')

    
    french_training = encodeSample('python/training/fra.txt', LENGTH)
    np.savetxt('python/encoded/vec_fr.txt', french_training, fmt='%f')

    german_training = encodeSample('python/training/deu.txt', LENGTH)
    np.savetxt('python/encoded/vec_deu.txt', german_training, fmt='%f')

    spanish_training = encodeSample('python/training/spa.txt', LENGTH)
    np.savetxt('python/encoded/vec_spa.txt', spanish_training, fmt='%f')

    italian_training = encodeSample('python/training/ita.txt', LENGTH)    
    np.savetxt('python/encoded/vec_ita.txt', italian_training, fmt='%f')

def encodeTesting():
    english_test = encodeSample('python/testing/eng.txt', LENGTH)
    french_test = encodeSample('python/testing/fra.txt', LENGTH)
    german_test = encodeSample('python/testing/deu.txt', LENGTH)
    spanish_test = encodeSample('python/testing/spa.txt', LENGTH)
    italian_test = encodeSample('python/testing/ita.txt', LENGTH)

    np.savetxt('python/encoded/vec_en_test.txt', english_test, fmt='%f')
    np.savetxt('python/encoded/vec_fr_test.txt', french_test, fmt='%f')
    np.savetxt('python/encoded/vec_deu_test.txt', german_test, fmt='%f')
    np.savetxt('python/encoded/vec_spa_test.txt', spanish_test, fmt='%f')
    np.savetxt('python/encoded/vec_ita_test.txt', italian_test, fmt='%f')

def testing():


    languages = {
        'english': np.loadtxt('python/encoded/vec_en.txt'),
        'french': np.loadtxt('python/encoded/vec_fr.txt'),
        'german': np.loadtxt('python/encoded/vec_deu.txt'),
        'spanish': np.loadtxt('python/encoded/vec_spa.txt'),
        'italian': np.loadtxt('python/encoded/vec_ita.txt')
    }

    test_languages = {
        'english': np.loadtxt('python/encoded/vec_en_test.txt'),
        'french': np.loadtxt('python/encoded/vec_fr_test.txt'),
        'german': np.loadtxt('python/encoded/vec_deu_test.txt'),
        'spanish': np.loadtxt('python/encoded/vec_spa_test.txt'),
        'italian': np.loadtxt('python/encoded/vec_ita_test.txt')
    }

    for test_lang_name, test_lang_vector in test_languages.items():
        for lang_name, lang_vector in languages.items():
            print(f"{test_lang_name} and {lang_name}: ", format(cosine_similarity(test_lang_vector, lang_vector), '.2f'))
        print()




testing()

# french = np.loadtxt('python/encoded/vec_fr.txt')
# english = np.loadtxt('python/encoded/vec_en.txt')

# english_test = encodeSample('python/testing/eng.txt', 1000)
# french_test = encodeSample('python/testing/fra.txt', 1000)

# print(cosine_similarity(french_test, english))